#!/bin/bash

#Fucking ColorLand
head='\033[0;35m'
body='\033[0;33m'
content='\033[0;34m'
cut='\033[0;36m'
NC='\033[0m'

LOAD1=$(cat /proc/loadavg | awk '{ print $1 }')
LOAD5=$(cat /proc/loadavg | awk '{ print $2 }')
LOAD15=$(cat /proc/loadavg | awk '{ print $3 }')

PROCESS=`ps -eo user=|sort|uniq -c | awk '{ print $2 " " $1 }'`
PROCESS_ALL=`echo "$PROCESS"| awk {'print $2'} | awk '{ SUM += $1} END { print SUM }'`
PROCESS_ROOT=`echo "$PROCESS"| grep root | awk {'print $2'}`
PROCESS_USER=`echo "$PROCESS"| grep -v root | awk {'print $2'} | awk '{ SUM += $1} END { print SUM }'`

UPDATES=$(cat /var/lib/update-notifier/updates-available | grep installed | awk '{ print $1 }')
SECURITY=$(cat /var/lib/update-notifier/updates-available | grep security | awk '{ print $1 }')

COLUMNS=3
red="\e[1;31m"
undim="\e[0m"
services=("caddy" "emby-server" "jackett" "smbd" "sshd" "nginx" "sonarr" "radarr" "lidarr" "grafana-server" "prometheus" "minecraft")
# sort services
#IFS=$'\n' services=($(sort <<<"${services[*]}"))
#unset IFS
service_status=()
# get status of all services
for service in "${services[@]}"; do
    service_status+=($(systemctl is-active "$service"))
done
out=""
for i in ${!services[@]}; do
    # color green if service is active, else red
    if [[ "${service_status[$i]}" == "active" ]]; then
        out+="${body}${services[$i]}:${green},${content}${service_status[$i]}${undim},"
    else
        out+="${services[$i]}:,${red}${service_status[$i]}${undim},"
    fi
    # insert \n every $COLUMNS column
    if [ $((($i+1) % $COLUMNS)) -eq 0 ]; then
        out+="\n"
    fi
done
out+="\n"

#Memory Code
usedmemory=$(free | grep Mem: | awk '{print $3}')
totalmemory=$(free | grep Mem: | awk '{print $2}')
usedswap=$(free | grep Swap: | awk '{print $3}')
totalswap=$(free | grep Swap: | awk '{print $2}')

mempercentage=$(bc <<< "scale=2; $usedmemory / $totalmemory * 100")
swappercentage=$(bc <<< "scale=2; $usedswap / $totalswap * 100")

a=$(printf "%-$(bc <<< "scale=2;$mempercentage/2")s" "=")
b=$(printf "%-$(bc <<< "scale=2;50-$mempercentage/2")s" "=")
memcompletebar=$(echo "${content}[${a// /=}${NC}${b// /=}${content}]${NC}")
swapa=$(printf "%-$(bc <<< "scale=2;$swappercentage/2")s" "=")
swapb=$(printf "%-$(bc <<< "scale=2;48-$swappercentage/2")s" "=")
swapcompletebar=$(echo "${content}[${swapa// /=}${NC}${swapb// /=}${content}]${NC}")

#Drive Code
usedmain=$(df2 | grep sda1 | awk '{print $3}')
totalmain=$(df2 | grep sda1 | awk '{print $2}')
usedboot=$(df2 | grep vda2 | awk '{print $3}')
totalboot=$(df2 | grep vda2 | awk '{print $2}')

mainpercentage=$(bc <<< "scale=2; $usedmain / $totalmain * 100")
bootpercentage=$(bc <<< "scale=2; $usedboot / $totalboot * 100")

maina=$(printf "%-$(bc <<< "scale=2;$mainpercentage/2")s" "=")
mainb=$(printf "%-$(bc <<< "scale=2;50-$mainpercentage/2")s" "=")
maincompletebar=$(echo "${content}[${maina// /=}${NC}${mainb// /=}${content}]${NC}")
boota=$(printf "%-$(bc <<< "scale=2;$bootpercentage/2")s" "=")
bootb=$(printf "%-$(bc <<< "scale=2;50-$bootpercentage/2")s" "=")
bootcompletebar=$(echo "${content}[${boota// /=}${NC}${bootb// /=}${content}]${NC}")

#Human Readable Values
humanmainused=$(df1 | grep sda1 | awk '{print $3}')
humanmaintotal=$(df1 | grep sda1 | awk '{print $2}')
humanbootused=$(df1 | grep vda2 | awk '{print $3}')
humanboottotal=$(df1 | grep vda2 | awk '{print $2}')
humanmemused=$(free -h --si | grep Mem: | awk '{print $3}')
humanmemtotal=$(free -h --si | grep Mem: | awk '{print $2}')
humanswapused=$(free -h --si | grep Swap: | awk '{print $3}')
humanswaptotal=$(free -h --si | grep Swap: | awk '{print $2}')

scrn=$(ls /run/screen/S-administrator)
screenamnt=$(ls /run/screen/S-administrator | wc -l)
endscreen="$(echo ${scrn} | awk '{ print $1}') $(echo ${scrn} | awk '{ print $2}') $(echo ${scrn} | awk '{ print $3}' )"
endscreen1="$(echo ${scrn} | awk '{ print $4}') $(echo ${scrn} | awk '{ print $5}') $(echo ${scrn} | awk '{ print $6}' )"

#echo -e "$humanmainused $humanmaintotal $humanbootused $humanboottotal $humanmemused $humanmemtotal $humanswapused $humanswaptotal"
#echo -e "$usedmain $totalmain $usedboot $totalboot $mainpercentage $bootpercentage"
#echo -e "$memcompletebar $swapcompletebar"
#echo -e "$maincompletebar $bootcompletebar"

echo -e "${logo}                               _       __                ${NC}       " 
echo -e "${logo}                    __________(_)___  / /_  ____  _  __  ${NC}            ${head} Disk Status${NC}"
echo -e "${logo}                   / ___/ ___/ / __ \/ __ \/ __ \| |/_/  ${NC}            ${body}    /                       ${bootpercentage::-3}% or $humanbootused used out of $humanboottotal${NC}"
echo -e "${logo}                  (__  ) /__/ / / / / /_/ / /_/ />  <    ${NC}                $bootcompletebar"
echo -e "${logo}                 /____/\___/_/_/ /_/_.___/\____/_/|_|    ${NC}            ${body}    ~/storage               ${mainpercentage::-3}% or $humanmainused used out of  ${humanmaintotal::-3}T${NC}"
echo -e "${cut}-------------------------------------------------------------------------${NC}$maincompletebar"
echo -e ""
echo -e "${head}System Information:                                                   Memory and Swap Status${NC}"
echo -e "   ${body}Distro :${NC}${content} Ubuntu 19.10 ${NC}                                  ${body}              Memory                  ${mempercentage::-3}% or  $humanmemused used out of $humanmemtotal${NC}"
echo -e "   ${body}Kernel :${NC}${content} $(uname -r)  ${NC}                                           $memcompletebar"
echo -e "   ${body}Load   :${NC}${content} $LOAD1 (1m), $LOAD5 (5m), $LOAD15 (15m)       ${NC} ${body}                     Swap                    ${swappercentage::-3}% or $humanswapused used out of $humanswaptotal${NC}"
echo -e "   ${body}Updates:${NC}${content} $UPDATES Regular Updates, $SECURITY Security Updates  ${NC}                      $swapcompletebar"
echo -e "   ${body}Procs  :${NC}${content} $G$PROCESS_ROOT$W (root), $G$PROCESS_USER$W (user), $G$PROCESS_ALL$W (total)${NC}"
echo -e "   ${body}Uptime :${NC}${content} $(uptime -p)${NC}"
echo -e ""
echo -e "${head}Services:                                                             Screen Sessions:"
echo -e "  $(printf "$out" | column -ts $',' | sed -e 's/^/  /' | grep smbd)${NC}${body}                $endscreen ${NC}"
echo -e "  $(printf "$out" | column -ts $',' | sed -e 's/^/  /' | grep caddy) ${NC}${body}               $endscreen1${NC}"
echo -e "  $(printf "$out" | column -ts $',' | sed -e 's/^/  /' | grep sonarr) ${NC}${body}               $endscreen1${NC}"
echo -e "  $(printf "$out" | column -ts $',' | sed -e 's/^/  /' | grep grafana-server) ${NC}${body}               $endscreen1${NC}"

